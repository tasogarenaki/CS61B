package byog.lab5;
import org.junit.Test;
import static org.junit.Assert.*;

import byog.TileEngine.TERenderer;
import byog.TileEngine.TETile;
import byog.TileEngine.Tileset;

import java.util.Random;

/**
 * Draws a world consisting of hexagonal regions.
 */
public class HexWorld {



    private static int[] calcNumTilesPerCol(int size) {
        int numCols = size * 3 - 2;
        

    }


    /**
     * Generates a hexagonal region, comprised of tiles.
     * The hexagon is generated by drawing the columns inside a Cartesian coordinate system
     * from left to right, one by one.
     * e.g. size = 3:
     *    |                      xxx
     *    |                     xxxxx
     *    |                    xxxxxxx
     * 3  | (x+5, y+3)    -->  xxxxxxx
     *    |                     xxxxx
     *    |                      xxx
     *    -------------------------------->
     * (0,0)                   5
     *
     * @param world     the hexagonal.
     * @param posX      coordinate of the lower left corner of the hexagon.
     * @param posY      coordinate of the lower left corner of the hexagon.
     * @param size      size number of tiles per side of the hexagon.
     * @param tile      the type of tile used to generate the hexagon.
     */
    public static void addHexagon(TETile[][] world, int posX, int posY, int size, TETile tile) {
        int height = size * 2;
        int[] numTilesPerCol = calcNumTilesPerCol(size);
        int numCols = numTilesPerCol.length;    // middle of the Hexagon is the maximum.

        if (size < 2) {
            throw new IllegalArgumentException("Hexagon must be at least size 2.");
        }

        for (int i = 0; i < numCols; i++) {
            int numTilesInCol = numTilesPerCol[i];
            int start = posY + (height - numTilesInCol) / 2;    // correct the y-coordinate of the first tile per column (lower left corner).
            int end = start + numTilesInCol;

            /* fill the hexagon, column by column. Inside the column from the bottom up. */
            for (int j = start; j < end; j++) {
                world[posX + i][j] = tile;
            }
        }

    }





    public static void main(String[] args) {



    }
}
